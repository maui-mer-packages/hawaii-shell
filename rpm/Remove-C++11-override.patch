diff --git a/src/server/animationcurve.h b/src/server/animationcurve.h
index e3438f7..f5fe123 100644
--- a/src/server/animationcurve.h
+++ b/src/server/animationcurve.h
@@ -68,14 +68,14 @@ OF THE POSSIBILITY OF SUCH DAMAGE.
 
 class InQuadCurve : public AnimationCurve {
 public:
-    virtual float value(float f) override {
+    virtual float value(float f) {
         return f * f;
     }
 };
 
 class InOutQuadCurve : public AnimationCurve {
 public:
-    virtual float value(float f) override {
+    virtual float value(float f) {
         f *= 2.f;
         if (f < 1.f) {
             return f * f/ 2.f;
@@ -98,7 +98,7 @@ protected:
 
 class OutBackCurve : public BackCurve {
 public:
-    virtual float value(float t) override {
+    virtual float value(float t) {
         float s = m_overshoot;
         t -= 1.f;
         return t*t*((s+1)*t+ s) + 1;
@@ -108,7 +108,7 @@ public:
 
 class InOutBackCurve : public BackCurve {
 public:
-    virtual float value(float t) override {
+    virtual float value(float t) {
         float s = m_overshoot;
         t *= 2.0;
         if (t < 1) {
@@ -124,7 +124,7 @@ public:
 
 class OutBounceCurve : public AnimationCurve {
 public:
-    virtual float value(float t) override {
+    virtual float value(float t) {
         float c = 1.f;
         float a = 0.5f;
         if (t < (4/11.0)) {
@@ -155,7 +155,7 @@ protected:
 
 class OutElasticCurve : public ElasticCurve {
 public:
-    virtual float value(float t) override {
+    virtual float value(float t) {
         if (t == 0.f) return 0.f;
         if (t == 1.f) return 1.f;
 
@@ -179,7 +179,7 @@ public:
     PulseCurve() { m_pulseNormalize = 1.f; m_pulseNormalize = 1.f / pulse(1); }
 
     // viscous fluid with a pulse for part and decay for the rest
-    virtual float value(float x) override {
+    virtual float value(float x) {
         if (x >= 1) return 1;
         if (x <= 0) return 0;
 
diff --git a/src/server/effect.h b/src/server/effect.h
index 8fec9c8..1dba933 100644
--- a/src/server/effect.h
+++ b/src/server/effect.h
@@ -51,7 +51,7 @@ protected:
     {
     protected:
         Settings();
-        virtual std::list<Option> options() const override;
+        virtual std::list<Option> options() const;
     };
 
 private:
diff --git a/src/server/effects/fademovingeffect.h b/src/server/effects/fademovingeffect.h
index 509abf1..61b1c58 100644
--- a/src/server/effects/fademovingeffect.h
+++ b/src/server/effects/fademovingeffect.h
@@ -33,8 +33,8 @@ public:
         Settings();
         ~Settings();
 
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
 
     private:
         FadeMovingEffect *m_effect;
diff --git a/src/server/effects/griddesktops.cpp b/src/server/effects/griddesktops.cpp
index 6e48702..ff72adc 100644
--- a/src/server/effects/griddesktops.cpp
+++ b/src/server/effects/griddesktops.cpp
@@ -26,7 +26,7 @@
 #include "binding.h"
 
 struct DGrab : public ShellGrab {
-    void focus() override
+    void focus()
     {
         if (moving) {
             return;
@@ -39,7 +39,7 @@ struct DGrab : public ShellGrab {
             weston_pointer_set_focus(pointer(), view, sx, sy);
         }
     }
-    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y) override
+    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y)
     {
         weston_pointer_move(pointer(), x, y);
 
@@ -79,7 +79,7 @@ struct DGrab : public ShellGrab {
             }
         }
     }
-    void button(uint32_t time, uint32_t button, uint32_t state) override
+    void button(uint32_t time, uint32_t button, uint32_t state)
     {
         if (state == WL_POINTER_BUTTON_STATE_PRESSED) {
             ShellSurface *shsurf = pointer()->focus ? Shell::getShellSurface(pointer()->focus->surface) : nullptr;
diff --git a/src/server/effects/griddesktops.h b/src/server/effects/griddesktops.h
index 4e991e9..55be529 100644
--- a/src/server/effects/griddesktops.h
+++ b/src/server/effects/griddesktops.h
@@ -36,10 +36,10 @@ public:
         Settings();
         ~Settings();
 
-        virtual std::list<Option> options() const override;
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
-        virtual void set(const std::string &name, const Option::BindingValue &v) override;
+        virtual std::list<Option> options() const;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
+        virtual void set(const std::string &name, const Option::BindingValue &v);
 
     private:
         GridDesktops *m_effect;
diff --git a/src/server/effects/inoutsurfaceeffect.h b/src/server/effects/inoutsurfaceeffect.h
index 2e04c39..b1a3194 100644
--- a/src/server/effects/inoutsurfaceeffect.h
+++ b/src/server/effects/inoutsurfaceeffect.h
@@ -31,8 +31,8 @@ public:
         Settings();
         ~Settings();
 
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
 
     private:
         InOutSurfaceEffect *m_effect;
diff --git a/src/server/effects/minimizeeffect.h b/src/server/effects/minimizeeffect.h
index 938afa8..a12660a 100644
--- a/src/server/effects/minimizeeffect.h
+++ b/src/server/effects/minimizeeffect.h
@@ -31,8 +31,8 @@ public:
         Settings();
         ~Settings();
 
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
 
     private:
         MinimizeEffect *m_effect;
@@ -42,8 +42,8 @@ public:
     ~MinimizeEffect();
 
 protected:
-    virtual void addedSurface(ShellSurface *surf) override;
-    virtual void removedSurface(ShellSurface *surf) override;
+    virtual void addedSurface(ShellSurface *surf);
+    virtual void removedSurface(ShellSurface *surf);
 
 private:
     struct Surface;
diff --git a/src/server/effects/scaleeffect.cpp b/src/server/effects/scaleeffect.cpp
index 024fdad..c1f27af 100644
--- a/src/server/effects/scaleeffect.cpp
+++ b/src/server/effects/scaleeffect.cpp
@@ -45,7 +45,7 @@ struct SurfaceTransform {
 };
 
 struct Grab : public ShellGrab {
-    void focus() override
+    void focus()
     {
         Workspace *currWs = Shell::instance()->currentWorkspace();
 
@@ -74,7 +74,7 @@ struct Grab : public ShellGrab {
             tr->alphaAnim.run(tr->surface->output(), ALPHA_ANIM_DURATION);
         }
     }
-    void button(uint32_t time, uint32_t button, uint32_t state) override
+    void button(uint32_t time, uint32_t button, uint32_t state)
     {
         if (state == WL_POINTER_BUTTON_STATE_PRESSED) {
             ShellSurface *shsurf = Shell::getShellSurface(surface->surface);
diff --git a/src/server/effects/scaleeffect.h b/src/server/effects/scaleeffect.h
index 6c74c0a..03c74e6 100644
--- a/src/server/effects/scaleeffect.h
+++ b/src/server/effects/scaleeffect.h
@@ -36,10 +36,10 @@ public:
         Settings();
         ~Settings();
 
-        virtual std::list<Option> options() const override;
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
-        virtual void set(const std::string &name, const Option::BindingValue &v) override;
+        virtual std::list<Option> options() const;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
+        virtual void set(const std::string &name, const Option::BindingValue &v);
 
     private:
         ScaleEffect *m_effect;
diff --git a/src/server/effects/zoomeffect.h b/src/server/effects/zoomeffect.h
index 0c5031c..051676c 100644
--- a/src/server/effects/zoomeffect.h
+++ b/src/server/effects/zoomeffect.h
@@ -28,10 +28,10 @@ public:
         Settings();
         ~Settings();
 
-        virtual std::list<Option> options() const override;
-        virtual void unSet(const std::string &name) override;
-        virtual void set(const std::string &name, int v) override;
-        virtual void set(const std::string &name, const Option::BindingValue &v) override;
+        virtual std::list<Option> options() const;
+        virtual void unSet(const std::string &name);
+        virtual void set(const std::string &name, int v);
+        virtual void set(const std::string &name, const Option::BindingValue &v);
 
     private:
         ZoomEffect *m_effect;
diff --git a/src/server/shellsignal.h b/src/server/shellsignal.h
index 205bf9b..75c0249 100644
--- a/src/server/shellsignal.h
+++ b/src/server/shellsignal.h
@@ -54,7 +54,7 @@ private:
     class FunctionFunctor : public Functor {
     public:
         FunctionFunctor(const std::function<void (Args...)> &func) : m_func(func) {}
-        virtual void call(Args... args) override { m_func(args...); }
+        virtual void call(Args... args) { m_func(args...); }
 
         std::function<void (Args...)> m_func;
     };
diff --git a/src/server/shellsurface.cpp b/src/server/shellsurface.cpp
index 0783e6c..d70f845 100644
--- a/src/server/shellsurface.cpp
+++ b/src/server/shellsurface.cpp
@@ -482,7 +482,7 @@ void ShellSurface::centerOnOutput(struct weston_output *output)
 class MoveGrab : public ShellGrab
 {
 public:
-    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y) override
+    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y)
     {
         weston_pointer_move(pointer(), x, y);
 
@@ -496,7 +496,7 @@ public:
         weston_view_set_position(view, dx, dy);
         weston_compositor_schedule_repaint(shsurf->m_surface->compositor);
     }
-    void button(uint32_t time, uint32_t button, uint32_t state_w) override
+    void button(uint32_t time, uint32_t button, uint32_t state_w)
     {
         enum wl_pointer_button_state state = (wl_pointer_button_state)state_w;
 
@@ -540,7 +540,7 @@ void ShellSurface::dragMove(struct weston_seat *ws)
 class ResizeGrab : public ShellGrab
 {
 public:
-    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y) override
+    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y)
     {
         weston_pointer_move(pointer(), x, y);
 
@@ -570,7 +570,7 @@ public:
 
         shsurf->m_client->send_configure(shsurf->m_surface, (int)edges, w, h);
     }
-    void button(uint32_t time, uint32_t button, uint32_t state) override
+    void button(uint32_t time, uint32_t button, uint32_t state)
     {
         if (pointer()->button_count == 0 && state == WL_POINTER_BUTTON_STATE_RELEASED) {
             shsurf->m_runningGrab = nullptr;
diff --git a/src/server/wl_hawaii/desktop-shell.cpp b/src/server/wl_hawaii/desktop-shell.cpp
index 7ef5c99..ee210fc 100644
--- a/src/server/wl_hawaii/desktop-shell.cpp
+++ b/src/server/wl_hawaii/desktop-shell.cpp
@@ -83,7 +83,7 @@ public:
         wl_resource_destroy(shsurfResource);
     }
 
-    void focus() override
+    void focus()
     {
         wl_fixed_t sx, sy;
         weston_view *pickedView = weston_compositor_pick_view(pointer()->seat->compositor,
@@ -95,7 +95,7 @@ public:
             weston_pointer_set_focus(pointer(), view, sx, sy);
     }
 
-    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y) override
+    void motion(uint32_t time, wl_fixed_t x, wl_fixed_t y)
     {
         ShellGrab::motion(time, x, y);
 
@@ -107,7 +107,7 @@ public:
         }
     }
 
-    void button(uint32_t time, uint32_t button, uint32_t state) override
+    void button(uint32_t time, uint32_t button, uint32_t state)
     {
         wl_resource *resource;
         wl_resource_for_each(resource, &pointer()->focus_resource_list) {
@@ -489,7 +489,7 @@ ShellSurface *DesktopShell::createShellSurface(weston_surface *surface, const we
 }
 
 struct BusyGrab : public ShellGrab {
-    void focus() override
+    void focus()
     {
         wl_fixed_t sx, sy;
         weston_view *view = weston_compositor_pick_view(pointer()->seat->compositor, pointer()->x, pointer()->y, &sx, &sy);
@@ -498,7 +498,7 @@ struct BusyGrab : public ShellGrab {
             delete this;
         }
     }
-    void button(uint32_t time, uint32_t button, uint32_t state) override
+    void button(uint32_t time, uint32_t button, uint32_t state)
     {
         weston_seat *seat = pointer()->seat;
 
@@ -1648,7 +1648,7 @@ public:
         return static_cast<DesktopShell *>(Shell::instance());
     }
 
-    virtual std::list<Option> options() const override
+    virtual std::list<Option> options() const
     {
         std::list<Option> list;
         list.push_back(Option::binding("move_window", Binding::Type::Button));
@@ -1660,7 +1660,7 @@ public:
         return list;
     }
 
-    virtual void unSet(const std::string &name) override
+    virtual void unSet(const std::string &name)
     {
         if (name == "move_window") {
             shell()->m_moveBinding->reset();
@@ -1677,7 +1677,7 @@ public:
         }
     }
 
-    virtual void set(const std::string &name, const Option::BindingValue &v) override
+    virtual void set(const std::string &name, const Option::BindingValue &v)
     {
         if (name == "move_window") {
             v.bind(shell()->m_moveBinding);
diff --git a/src/server/wl_hawaii/desktop-shell.h b/src/server/wl_hawaii/desktop-shell.h
index 68ab392..823cec8 100644
--- a/src/server/wl_hawaii/desktop-shell.h
+++ b/src/server/wl_hawaii/desktop-shell.h
@@ -78,7 +78,7 @@ public:
     void unlockSession();
     void resumeDesktop();
 
-    bool isTrusted(wl_client *client, const char *interface) const override;
+    bool isTrusted(wl_client *client, const char *interface) const;
 
     void addPanelSurfaceToLayer(weston_view *view);
 
@@ -89,7 +89,7 @@ public:
 protected:
     virtual void init();
     virtual void setGrabCursor(Cursor cursor);
-    virtual ShellSurface *createShellSurface(weston_surface *surface, const weston_shell_client *client) override;
+    virtual ShellSurface *createShellSurface(weston_surface *surface, const weston_shell_client *client);
 
 private:
     void idle(void *);
diff --git a/src/server/wl_hawaii/hawaiiclientwindow.h b/src/server/wl_hawaii/hawaiiclientwindow.h
index ca33c01..427ca1d 100644
--- a/src/server/wl_hawaii/hawaiiclientwindow.h
+++ b/src/server/wl_hawaii/hawaiiclientwindow.h
@@ -44,7 +44,7 @@ public:
     void create();
 
 protected:
-    virtual void added() override;
+    virtual void added();
 
 private:
     ShellSurface *shsurf();
diff --git a/src/server/wl_hawaii/hawaiiworkspace.h b/src/server/wl_hawaii/hawaiiworkspace.h
index cbb8daa..308d483 100644
--- a/src/server/wl_hawaii/hawaiiworkspace.h
+++ b/src/server/wl_hawaii/hawaiiworkspace.h
@@ -48,7 +48,7 @@ public:
     static HawaiiWorkspace *fromResource(wl_resource *resource);
 
 protected:
-    virtual void added() override;
+    virtual void added();
 
 private:
     void activeChanged();
